parameters:
  - name: MatrixConfigs
    type: object
    default:
      - Name: base_product_matrix
        Path: eng/scripts/job-matrix/samples/matrix.json
        Selection: all
      - Name: sparse_product_matrix
        Path: eng/scripts/job-matrix/samples/matrix.json
        Selection: sparse
  - name: steps
    type: object
    default:
      - pwsh: |
          Write-Output "SPARSE MATRIX JOB PARAMETERS"
          Write-Output $(Agent.JobName)
          Write-Output "-----------------"
          Write-Output $(operatingSystem)
          Write-Output $(framework)
          try {
            Write-Output $(additionalTestArguments)
          } catch {}
        displayName: Print matrix job variables
      - pwsh: |
          Write-Output "Success"
        displayName: OS condition example
        condition: and(succeededOrFailed(), contains(variables['operatingSystem'], 'windows'))

jobs:
  - ${{ each config in parameters.MatrixConfigs }}:
    - job: generate_matrix_${{ config.Name }}
      displayName: Generate test matrix ${{ config.Name }}
      steps:
      - pwsh: |
          eng/scripts/job-matrix/Create-JobMatrix.ps1 `
            -ConfigPath ${{ config.Path }} `
            -Selection ${{ config.Selection }}
        name: generate_job_matrix_${{ config.Name }}
        displayName: Generate Job Matrix
    - job:
      dependsOn: generate_matrix_${{ config.Name }}
      strategy:
        maxParallel: 0
        matrix: $[ dependencies.generate_matrix_${{ config.Name }}.outputs['generate_job_matrix_${{ config.Name }}.matrix'] ]
      steps:
        - ${{ parameters.steps }}
